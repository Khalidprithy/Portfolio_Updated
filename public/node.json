[
    {
        "_id": "633a731fd76e3268fcb37f4a",
        "index": 0,
        "question": "What is Node.js?",
        "answer": "Node.js is a an open-source, cross-platform JavaScript runtime environment and library for running web applications outside the client's browser.",
        "points": [
            "It is used for creating server-side web applications",
            "Node.js is perfect for data-intensive applications as it uses an asynchronous, event-driven model."
        ]
    },
    {
        "_id": "633a731fb48460440e6774a1",
        "index": 1,
        "question": "How does Node.js work?",
        "answer": "Node.js is based on V8 engine, it is a virtual machine that utilizes JavaScript as its scripting language and achieves high output via non-blocking I/O abd single threaded event loop",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 2,
        "question": "Where can we use Node.js",
        "answer": "",
        "rating": "Nannie Noel",
        "points": [
            "Web applications",
            "Distributed systems",
            "Network applications"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 3,
        "question": "What do you understand by the term I/O?",
        "answer": "The term I/O is used to describe any program, operation or device that transfers data to or from a medium and to or from another medium. Every transfer is an output from one medium and an input into another. Medium can be a physical device or network or files within a system",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 4,
        "question": "Difference between frontend and backend development.",
        "answer": "Here are some difference",
        "tableHead": [
            "Frontend",
            "Backend"
        ],
        "table": [
            {
                "row1": [
                    "Frontend refers to the client-side of an application",
                    "It is the part of a web application that users can see and interact with",
                    "It typically includes everything that attributes to the visual aspects if a web application",
                    "HTML, CSS, JavaScript, Angular JS and React JS are some of the essentials of frontend development"
                ]
            },
            {
                "row2": [
                    "Backend refers to the server-side of an application",
                    "It constitutes everything that happens behind the scenes",
                    "It generally includes a web server that communicates with a database to serve requests",
                    "Java, PHP, Python and Node.js are some of the backend development technologies"
                ]
            }
        ],
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 5,
        "question": "What is NPM?",
        "answer": "Do you mean Node Package Manager? NPM stands for Node Package Manager.",
        "rating": "Nannie Noel",
        "points": [
            "NPM is responsible for managing all the packages and modules for Node.js",
            "It provides online repositories for node.js packages/modules which are searchable on search.node.org",
            "It also provides command line utility to install Node.js packages, dose version management and dependency management of Node.js packages"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 6,
        "question": "What are modules in Node.js",
        "answer": "Modules are like JavaScript libraries that can be used in a Node.js application to include a set of functions. To include a module in a Node.js application, use require() function with the parenthesis containing the name of the module. Some od the Nodejs modules are mentioned bellow ",
        "rating": "Nannie Noel",
        "points": [
            "http- Includes classes, methods and events to create Node.js http server",
            "util- Includes utility functions useful for developers",
            "fs- Includes events, classes, and methods to deal with file I/O operations",
            "url- Includes methods for URL parsing",
            "querystring- Includes methods for work with query string",
            "stream- Includes methods to handle streaming data",
            "zlib- Includes methods to compress or decompress files"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 7,
        "question": "Why is Node.js being preferred over other backend technologies like Java and PHP?",
        "answer": "",
        "rating": "Nannie Noel",
        "points": [
            "Node.js is really fast",
            "Node Package Manager has over 50000 bundles for at the developers disposal",
            "Perfect for data intensive, real-time web applications as Node.js never waits for an API to return data"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 8,
        "question": "Which database is more popularly used with Node.js?",
        "answer": "MongoDB is the most popularly used database used with Node.js, it is a NoSQL, cross-platform, document-oriented database that provides, high performance, high availability, and easy scalability",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 9,
        "question": "Why is Node.js Single-threaded?",
        "answer": "Node.js is single-threaded for async processing. By doing async processing on a single-thread under typical web loads, more performance and scalability can be achieved instead of the typical thread-based implementation.",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 10,
        "question": "If Node.js is single-threaded, then how does it handle concurrency?",
        "answer": "The Multi-Threaded Request/Response Stateless Model is not followed by the Node JS Platform, and it adheres to the Single-Threaded Event Loop Model. The Node JS Processing paradigm is heavily influenced by the JavaScript Event-based model and the JavaScript callback system. As a result, Node.js can easily manage more concurrent client requests. The event loop is the processing model's beating heart in Node.js.",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 11,
        "question": "Explain callback in Node.js.",
        "answer": "A callback function is called after a given task. It allows other code to be run in the meantime and prevents any blocking.  Being an asynchronous platform, Node.js heavily relies on callback. All APIs of Node are written to support callbacks.",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 12,
        "question": "What are the advantages of using promises instead of callbacks?",
        "answer": "",
        "rating": "Nannie Noel",
        "points": [
            "The control flow of asynchronous logic is more specified and structured.",
            "The coupling is low.",
            "We've built-in error handling.",
            "Improved readability."
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 13,
        "question": "How is Node.js most frequently used?",
        "answer": "Node.js is widely used in the following applications:",
        "rating": "Nannie Noel",
        "points": [
            "Real-time chats",
            "Internet of Things",
            "Complex SPAs (Single-Page Applications)",
            "Real-time collaboration tools",
            "Streaming applications",
            "Microservices architecture"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 14,
        "question": "What is the purpose of the module .Exports?",
        "answer": "In Node.js, a module encapsulates all related codes into a single unit of code that can be parsed by moving all relevant functions into a single file. You may export a module with the module and export the function, which lets it be imported into another file with a needed keyword.",
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 4,
        "question": "What are the pros and cons of Node.js?",
        "answer": "Here are some difference",
        "tableHead": [
            "Node.js Pros",
            "Node.js Cons"
        ],
        "table": [
            {
                "row1": [
                    "Fast processing and an event-based model",
                    "Uses JavaScript, which is well-known amongst developers",
                    "Node Package Manager has over 50,000 packages that provide the functionality to an application",
                    "Best suited for streaming huge amounts of data and I/O intensive operations"
                ]
            },
            {
                "row2": [
                    "Not suitable for heavy computational tasks",
                    "Using callback is complex since you end up with several nested callbacks",
                    "Dealing with relational databases is not a good option for Node.js",
                    "Since Node.js is single-threaded, CPU intensive tasks are not its strong suit"
                ]
            }
        ],
        "rating": "Nannie Noel",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 16,
        "question": "What are streams in Node.js?",
        "answer": "Streams are objects that enable you to read data or write data continuously. There are four types of streams: ",
        "rating": "Nannie Noel",
        "points": [
            "Readable- Used for reading operations",
            "Writable- Used for write operations",
            "Duplex- Can be used for both reading and write operations",
            "Transform- A type of duplex stream where the output is computed based on input"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 17,
        "question": "Explain asynchronous and non-blocking APIs in Node.js.",
        "answer": "",
        "rating": "Nannie Noel",
        "points": [
            "All Node.js library APIs are asynchronous, which means they are also non-blocking",
            "A Node.js-based server never waits for an API to return data. Instead, it moves to the next API after calling it, and a notification mechanism from a Node.js event responds to the server for the previous API call"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 18,
        "question": "Explain the concept of middleware in Node.js.",
        "answer": "Middleware is a function that receives the request and response objects. Most tasks that the middleware functions perform are:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Execute any code",
            "Update or modify the request and the response objects",
            "Finish the request-response cycle",
            "Invoke the next middleware in the stack"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 19,
        "question": "What does event-driven programming mean?",
        "answer": "An event-driven programming approach uses events to trigger various functions. An event can be anything, such as typing a key or clicking a mouse button. A call-back function is already registered with the element executes whenever an event is triggered.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 20,
        "question": "What are the two types of API functions in Node.js?",
        "answer": "The two types of API functions in Node.js are:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Asynchronous, non-blocking functions",
            "Synchronous, blocking functions"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 21,
        "question": "What is node.js streams?",
        "answer": "Streams are instances of EventEmitter which can be used to work with streaming data in Node.js. They can be used for handling and manipulating streaming large files(videos, mp3, etc) over the network. They use buffers as their temporary storage.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Writable: streams to which data can be written (for example, fs.createWriteStream()).",
            "Readable: streams from which data can be read (for example, fs.createReadStream()).",
            "Duplex: streams that are both Readable and Writable (for example, net.Socket).",
            "Transform: Duplex streams that can modify or transform the data as it is written and read (for example, zlib.createDeflate())"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 22,
        "question": "Why should you separate Express app and server?",
        "answer": "The server is responsible for initializing the routes, middleware, and other application logic whereas the app has all the business logic which will be served by the routes initiated by the server. This ensures that the business logic is encapsulated and decoupled from the application logic which makes the project more readable and maintainable",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 23,
        "question": "How is Node.js most frequently used?",
        "answer": "Node.js is widely used in the following applications:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Real-time chats",
            "Internet of Things",
            "Complex SPAs (Single-Page Applications)",
            "Real-time collaboration tools",
            "Streaming applications",
            "Microservices architecture"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 24,
        "question": "What is the purpose of the module .Exports?",
        "answer": "In Node.js, a module encapsulates all related codes into a single unit of code that can be parsed by moving all relevant functions into a single file. You may export a module with the module and export the function, which lets it be imported into another file with a needed keyword.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 25,
        "question": "Which database is more popularly used with Node.js?",
        "answer": "MongoDB is the most common database used with Node.js. It is a NoSQL, cross-platform, document-oriented database that provides high performance, high availability, and easy scalability.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 26,
        "question": "What are some of the most commonly used libraries in Node.js?",
        "answer": "There are two commonly used libraries in Node.js:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "ExpressJS - Express is a flexible Node.js web application framework that provides a wide set of features to develop web and mobile applications.",
            "Mongoose - Mongoose is also a Node.js web application framework that makes it easy to connect an application to a database."
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 27,
        "question": "What does event-driven programming mean?",
        "answer": "An event-driven programming approach uses events to trigger various functions. An event can be anything, such as typing a key or clicking a mouse button. A call-back function is already registered with the element executes whenever an event is triggered.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 28,
        "question": "What are the two types of API functions in Node.js?",
        "answer": "The two types of API functions in Node.js are:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Asynchronous, non-blocking function",
            "Synchronous, blocking functions"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 29,
        "question": "What is the package.json file?",
        "answer": "The package.json file is the heart of a Node.js system. This file holds the metadata for a particular project. The package.json file is found in the root directory of any Node application or module",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "This is what a package.json file looks like immediately after creating a Node.js project using the command: npm init",
            "You can edit the parameters when you create a Node.js project."
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 30,
        "question": "What is the Express.js package?",
        "answer": "Express is a flexible Node.js web application framework that provides a wide set of features to develop both web and mobile applications",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 31,
        "question": "How do you create a simple Express.js application?",
        "answer": "",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "The request object represents the HTTP request and has properties for the request query string, parameters, body, HTTP headers, and so on",
            "The response object represents the HTTP response that an Express app sends when it receives an HTTP request"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 32,
        "question": "What is the control flow function?",
        "answer": "The control flow function is a piece of code that runs in between several asynchronous function calls.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 33,
        "question": "What is piping in Node.js?",
        "answer": "Piping is a mechanism used to connect the output of one stream to another stream. It is normally used to retrieve data from one stream and pass output to another stream",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 34,
        "question": "How would you connect a MongoDB database to Node.js?",
        "answer": "To create a database in MongoDB:",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Start by creating a MongoClient object",
            "Specify a connection URL with the correct IP address and the name of the database you want to create"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 35,
        "question": "Why Node.js is single threaded?",
        "answer": "For async processing, Node.js was created explicitly as an experiment. It is believed that more performance and scalability can be achieved by doing async processing on a single thread under typical web loads than the typical thread based implementation",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 36,
        "question": "Can you access DOM in node?",
        "answer": "No, you cannot access DOM in node.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 37,
        "question": "Using the event loop what are the tasks that should be done asynchronously?",
        "answer": "",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "I/O operations",
            "Heavy computation",
            "Anything requiring blocking"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 38,
        "question": "Why node.js is quickly gaining attention from JAVA programmers?",
        "answer": "Node.js is quickly gaining attention as it is a loop based server for JavaScript. Node.js gives user the ability to write the JavaScript on the server, which has access to things like HTTP stack, file I/O, TCP and databases.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 39,
        "question": "What are the two arguments that async.queue takes?",
        "answer": "The two arguments that async.queue takes",
        "rating": "Nannie Noel",
        "summary": "",
        "points": [
            "Task function",
            "Concurrency value",
            "Database Profiling"
        ]
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 40,
        "question": "What does it mean “non-blocking” in node.js?",
        "answer": "In node.js “non-blocking” means that its IO is non-blocking. Node uses “libuv” to handle its IO in a platform-agnostic way. On windows, it uses completion ports for unix it uses epoll or kqueue etc. So, it makes a non-blocking request and upon a request, it queues it within the event loop which call the JavaScript ‘callback’ on the main JavaScript thread.",
        "rating": "Nannie Noel",
        "summary": "",
        "points": []
    },
    {
        "_id": "633a731f2d82b38b6953c4aa",
        "index": 41,
        "question": " Explain Splitting?",
        "answer": "Splitting is the background process that we use to store chunks from increasing too large.",
        "rating": "Nannie Noel",
        "summary": ""
    }
]